.row

  .span12
    .pull-right
      - if can? :destroy, @expression
        = link_to expression_path(@expression), :method => :delete, :class => 'destroy-expression btn btn-danger', :confirm => t(:are_you_sure, :default => 'Are you sure ?')  do
          %i.icon-remove-sign
          %span.hidden Remove this expression
      - if can? :update, @expression
        = link_to edit_expression_path(@expression), :class => 'update-expression btn' do
          %i.icon-pencil
          %span.hidden Update this expression
      = todo :span do
        = link_to '#modal-flag', :class => 'flag-expression btn btn-warning', :'data-toggle' => :modal do
          %i.icon-flag
          %span.hidden Flag this expression

    = todo do
      .share
        - attributes = { style: 'font-size: 48px; line-height: 48px' }
        = link_to '#', attributes do
          %i.icon-facebook-sign
        = link_to '#', attributes do
          %i.icon-twitter-sign{ style: 'color: #82e1ff'}


= render @expression




.row

  .span4
    .meaning
      %h3= t('activerecord.attributes.expression.meaning').capitalize
      = simple_format @expression.meaning

  .span4
    .source
      %h3= t('activerecord.attributes.expression.source_type').capitalize
      = t("expression.source_type.#{@expression.source_type}") unless @expression.source_type == 'other'
      = simple_format @expression.source_info unless @expression.source_info.blank?

  .span4
    .expressions
      %h3= t(:other_expressions_by, :author => link_to(a=@expression.author,a), :default => "Other expressions by #{@expression.author}").html_safe
      %ul.expressions
        - Expression.where(:author_id => @expression.author.id).limit(3).each do |e|
          %li= render e, :state => :list_item


= todo do

  .row



    .span4
      %h3 Examples
      %ul.unstyled
        - 2.times do |n|
          %li.example
            .body
              blablabla
              =@expression
              blablabla.
            %small.muted
              %span.author=raw t(:added_by, :author => link_to(User.first))
              %span.ago= t(:time_ago, :time => time_ago_in_words(Time.now))
            %hr

      =link_to '#modal-tags', :class => 'btn btn-info', :'data-toggle' => :modal do
        %i.icon-plus
        contribute an example



= todo do

  .row

    .span4
      .tags
        %h3 Tags
        %p
          Yours:
          - 5.times do |n|
            %span.label.label-info{:style=>'line-height: 2'}= link_to "mytag #{n}", '', :style => 'color: inherit'
        %p
          Others:
          - 15.times do |n|
            %span.label{:style=>'line-height: 2'}= link_to "tag #{n}", '', :style => 'color: inherit'
        %p
          =link_to '#modal-tags', :class => 'btn btn-info', :'data-toggle' => :modal do
            %i.icon-tags
            add some tags

    .span4
      .comments
        %h3 Comments
        = render 'todo/comments_list'
        %ul.unstyled
          %li
            = link_to '', :class => 'btn btn-info' do
              %i.icon-comment
              add comment

    .span4
      .illustrations
        %h3 Illustrations

        %ul.unstyled
          %li
            = link_to '', :class => 'btn btn-info' do
              %i.icon-plus
              contribute with an drawing or a picture

= todo do

  #modal-flag.modal.hide.fade
    .modal-header
      %button.close{:'data-dismiss'=>:modal, :type=>:button} x
      %h2
        Report this expression
        %br/
        %small Please flag this expression to report any problem.
    .modal-body
      %h3 What is the problem with this expression ?
      %p{:style=>'text-align: center'}= @expression.body
      %form
        %input{:type=>:radio, :name=>:flag_type,}= t(:not_an_idiomatic_expression)
        %br/
        %input{:type=>:radio, :name=>:flag_type,}= t(:wrong_language)
        %br/
        %input{:type=>:radio, :name=>:flag_type,}= t(:orthograph)
        %br/
        %input{:type=>:radio, :name=>:flag_type,}= t(:other)
    .modal-footer
      %input{:type=>:button,:value=>:submit}
      %input{:type=>:button,:value=>:cancel, :'data-dismiss'=> :modal,}

  #modal-tags.modal.hide.fade
    .modal-header
      %button.close{:'data-dismiss'=>:modal, :type=>:button} x
      %h2 Tag this expression
    .modal-body
    .modal-footer
      %input{:type=>:button,:value=>:submit}
      %input{:type=>:button,:value=>:cancel, :'data-dismiss'=> :modal,}


= todo do
  .row

    .span6
      .expressions
        %h3 Similar expressions
        %ul.expressions
          - Expression.limit(5).each do |e|
            %li= render e, :state => :list_item

